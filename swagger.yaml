openapi: 3.0.3
info:
  title: Laravel 12 Task API
  description: >
    API REST para gerenciamento de **usuários** e **tasks**.  
    Autenticação baseada em **JWT**.  
    Integração com **SQS**, **Firebase Cloud Messaging** e **AWS CloudWatch**.
  version: 1.0.0
servers:
  - url: http://localhost:8001
    description: Ambiente local

tags:
  - name: Auth
    description: Autenticação e controle de sessão
  - name: Tasks
    description: Gerenciamento de tarefas
  - name: Users
    description: Gerenciamento de usuários

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    AcceptHeader:
      name: Accept
      in: header
      required: true
      schema:
        type: string
        example: application/json
    ContentTypeHeader:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        example: application/json

security:
  - bearerAuth: []
  
paths:
  /api/v1/auth/login:
    post:
      tags: [Auth]
      summary: Login do usuário
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: cintia@example.com
                password:
                  type: string
                  example: password
      responses:
        "200":
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: bearer
                  expires_in:
                    type: integer

  /api/v1/auth/logout:
    post:
      tags: [Auth]
      summary: Logout do usuário
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
      responses:
        "200":
          description: Logout realizado com sucesso

  /api/v1/auth/refresh:
    post:
      tags: [Auth]
      summary: Refresh do token JWT
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
      responses:
        "200":
          description: Novo token gerado

  /api/v1/tasks:
    get:
      tags: [Tasks]
      summary: Listar tasks (paginação)
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
      responses:
        "200":
          description: Lista paginada de tasks
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object
    post:
      tags: [Tasks]
      summary: Criar nova task
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Implementar feature X"
                description:
                  type: string
                  example: "Descrição da task"
                user_id:
                  type: integer
      responses:
        "201":
          description: Task criada com sucesso
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object

  /api/v1/tasks/{id}:
    get:
      tags: [Tasks]
      summary: Buscar task por ID
      
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detalhes da task
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object
    put:
      tags: [Tasks]
      summary: Atualizar task
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Task atualizada
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object
    delete:
      tags: [Tasks]
      summary: Excluir task
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Task excluída

  /api/v1/tasks/iscompleted/{id}:
    patch:
      tags: [Tasks]
      summary: Marcar/desmarcar task como concluída      
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Status atualizado
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object

  /api/v1/tasks/userid/{id}:
    patch:
      tags: [Tasks]
      summary: Atualizar usuário associado à task
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Usuário vinculado à task
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object

  /api/v1/users:
    get:
      tags: [Users]
      summary: Listar usuários
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
      responses:
        "200":
          description: Lista de usuários
    post:
      tags: [Users]
      summary: Criar novo usuário
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "201":
          description: Usuário criado
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object

  /api/v1/users/{id}:
    get:
      tags: [Users]
      summary: Buscar usuário por ID
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detalhes do usuário
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object
    put:
      tags: [Users]
      summary: Atualizar usuário
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Usuário atualizado
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object
    delete:
      tags: [Users]
      summary: Deletar usuário
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Usuário deletado
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object

  /api/v1/users/fcm-token/{id}:
    post:
      tags: [Users]
      summary: Atualizar token do Firebase Cloud Messaging
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fcm_token:
                  type: string
      responses:
        "200":
          description: Token atualizado
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object

  /api/v1/users/tasksummary/{id}:
    get:
      tags: [Users]
      summary: Resumo das tasks de um usuário
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Resumo de tasks do usuário
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object

  /api/v1/users/upload-profile/{id}:
    post:
      tags: [Users]
      summary: Upload da foto de perfil do usuário
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/ContentTypeHeader'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: Upload realizado
          content:
            application/json:   # <- aqui força Accept: application/json
              schema:
                type: object
